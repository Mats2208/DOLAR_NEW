---
const banks = [
  {
    name: "Banco Nacional de Bolivia",
    restriction: "Solo para servicios de streaming",
    tarifarioLink: "https://www.bnb.com.bo/PortalBNB/",
    color: "bg-gradient-to-br from-blue-500 to-blue-700",
    textColor: "text-white",
    limitStatus: "limited"
  },
  {
    name: "Banco Mercantil Santa Cruz",
    restriction: "No se permite gastar todo el límite. USD 15 por semana en Brasil y sin compras internacionales para cuentas nuevas desde el 11/09/2024",
    tarifarioLink: "/tarifario/banco-mercantil",
    color: "bg-gradient-to-br from-red-500 to-red-700",
    textColor: "text-white",
    limitStatus: "very-limited"
  },
  {
    name: "Banco Bisa",
    restriction: "No permite pagar anuncios de Facebook",
    tarifarioLink: "/tarifario/banco-bisa",
    color: "bg-gradient-to-br from-green-500 to-green-700",
    textColor: "text-white",
    limitStatus: "moderate"
  },
  {
    name: "Banco Union",
    restriction: "Clientes nuevos desde 01/06/2024: hasta USD 20 en comercios presenciales y USD 10 en compras web",
    tarifarioLink: "/tarifario/banco-union",
    color: "bg-gradient-to-br from-yellow-500 to-yellow-700",
    textColor: "text-white",
    limitStatus: "very-limited"
  },
  {
    name: "Banco de Credito de Bolivia",
    restriction: "Sin restricciones aparentes",
    tarifarioLink: "/tarifario/banco-credito",
    color: "bg-gradient-to-br from-blue-600 to-indigo-800",
    textColor: "text-white",
    limitStatus: "unrestricted"
  },
  {
    name: "Banco Sol",
    restriction: "No permite pagar anuncios de Facebook",
    tarifarioLink: "/tarifario/banco-sol",
    color: "bg-gradient-to-br from-orange-500 to-orange-700",
    textColor: "text-white",
    limitStatus: "moderate"
  },
  {
    name: "Banco Ganadero",
    restriction: "Sin restricciones aparentes",
    tarifarioLink: "/tarifario/banco-ganadero",
    color: "bg-gradient-to-br from-emerald-500 to-emerald-700",
    textColor: "text-white",
    limitStatus: "unrestricted"
  },
  {
    name: "Banco Economico",
    restriction: "Solo para servicios de streaming",
    tarifarioLink: "/tarifario/banco-economico",
    color: "bg-gradient-to-br from-cyan-500 to-cyan-700",
    textColor: "text-white",
    limitStatus: "limited"
  },
  {
    name: "Banco Fortaleza",
    restriction: "Sin restricciones aparentes",
    tarifarioLink: "/tarifario/banco-fortaleza",
    color: "bg-gradient-to-br from-purple-500 to-purple-700",
    textColor: "text-white",
    limitStatus: "unrestricted"
  }
];


// Define types for better TypeScript support
type LimitStatus = "unrestricted" | "moderate" | "limited" | "very-limited";

interface Bank {
  name: string;
  restriction: string;
  tarifarioLink: string;
  color: string;
  textColor: string;
  limitStatus: LimitStatus;
}

// Ordenar bancos por nivel de restricción
const sortedBanks = [...banks].sort((a, b) => {
  const restrictionOrder: Record<LimitStatus, number> = {
    "unrestricted": 1,
    "moderate": 2,
    "limited": 3,
    "very-limited": 4
  };
  return restrictionOrder[a.limitStatus as LimitStatus] - restrictionOrder[b.limitStatus as LimitStatus];
});

const lastUpdated = "03/06/2025";
---

<section id = "Limites" class="py-6 md:py-16 bg-gray-50">
  <div class="max-w-6xl mx-auto px-3 sm:px-6">    <!-- Header Section -->
    <div class="text-center mb-6 md:mb-16">
      <div class="inline-flex items-center justify-center p-1.5 bg-blue-100 rounded-full mb-2 md:mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 md:h-6 md:w-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3" />
        </svg>
      </div>
      <h2 class="text-lg sm:text-xl md:text-4xl font-extrabold bg-gradient-to-r from-blue-600 to-indigo-800 bg-clip-text text-transparent mb-2 md:mb-4">
        Límites y Restricciones de Bancos Bolivianos
      </h2>
      <p class="text-sm md:text-lg text-gray-600 max-w-3xl mx-auto px-2">
        Todos los bancos permiten un límite mensual base de 
        <span class="font-bold text-blue-700 bg-blue-50 px-1 py-0.5 rounded text-xs md:text-sm">$100</span>, 
        pero las restricciones pueden variar según la institución.
      </p>
    </div>    <!-- Legend -->
    <div class="flex flex-wrap justify-center gap-1.5 md:gap-3 mb-4 md:mb-8">
      <div class="flex items-center space-x-1.5 bg-white px-2 py-1 md:px-3 md:py-1.5 rounded-full shadow-sm">
        <span class="w-2.5 h-2.5 md:w-3 md:h-3 rounded-full bg-green-500"></span>
        <span class="text-xs md:text-sm font-medium">Sin restricciones</span>
      </div>
      <div class="flex items-center space-x-1.5 bg-white px-2 py-1 md:px-3 md:py-1.5 rounded-full shadow-sm">
        <span class="w-2.5 h-2.5 md:w-3 md:h-3 rounded-full bg-yellow-500"></span>
        <span class="text-xs md:text-sm font-medium">Restricciones moderadas</span>
      </div>
      <div class="flex items-center space-x-1.5 bg-white px-2 py-1 md:px-3 md:py-1.5 rounded-full shadow-sm">
        <span class="w-2.5 h-2.5 md:w-3 md:h-3 rounded-full bg-red-500"></span>
        <span class="text-xs md:text-sm font-medium">Muy limitado</span>
      </div>
    </div>

    <!-- Mobile Carousel View -->
    <div class="block sm:hidden mb-8">
      <div class="relative">
        <!-- Carousel Container -->
        <div 
          class="flex overflow-x-auto scrollbar-hide snap-x snap-mandatory gap-3 pb-4 px-4" 
          style="scroll-behavior: smooth;"
          id="banks-carousel"
        >
          {sortedBanks.map((bank) => {
            const statusColors = {
              "unrestricted": "border-l-4 border-green-500",
              "moderate": "border-l-4 border-yellow-500",
              "limited": "border-l-4 border-orange-500",
              "very-limited": "border-l-4 border-red-500"
            };
            
            const statusBadges = {
              "unrestricted": "bg-green-100 text-green-800",
              "moderate": "bg-yellow-100 text-yellow-800",
              "limited": "bg-orange-100 text-orange-800",
              "very-limited": "bg-red-100 text-red-800"
            };
            
            const statusText = {
              "unrestricted": "Sin restricciones",
              "moderate": "Restricciones moderadas",
              "limited": "Restricciones significativas",
              "very-limited": "Muy limitado"
            };            return (
              <div class={`flex-none w-72 snap-center bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group ${statusColors[bank.limitStatus as keyof typeof statusColors]}`}>
                <div class="p-4">
                  <div class="flex items-center mb-3">
                    <div class="flex-1">
                      <h3 class="text-sm font-bold text-gray-900 leading-tight">{bank.name}</h3>
                      <div class="flex items-center mt-1">
                        <span class={`text-xs font-medium px-2 py-0.5 rounded-full ${statusBadges[bank.limitStatus as keyof typeof statusBadges]}`}>
                          {statusText[bank.limitStatus as keyof typeof statusText]}
                        </span>
                      </div>
                    </div>
                  </div>
                  
                  <div class="mb-3 pb-3 border-b border-gray-100">
                    <div class="flex items-center justify-between">
                      <span class="text-xs text-gray-500">Límite mensual base:</span>
                      <span class="text-xs font-bold text-blue-700">$100</span>
                    </div>
                  </div>
                  
                  <div class="mb-4">
                    <h4 class="text-xs font-semibold text-gray-700 mb-2">Restricciones:</h4>
                    <p class="text-xs text-gray-600 min-h-[50px] leading-tight">{bank.restriction}</p>
                  </div>
                  
                  <a 
                    href={bank.tarifarioLink} 
                    target="_blank" 
                    rel="noopener noreferrer" 
                    class="inline-flex items-center text-blue-600 hover:text-blue-800 text-xs font-medium transition-colors group-hover:underline"
                  >
                    Ver Tarifario
                    <svg class="w-3 h-3 ml-1 transition-transform group-hover:translate-x-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                    </svg>
                  </a>
                </div>
              </div>
            );
          })}
        </div>
      </div>
    </div>

    <!-- Desktop Filter Buttons -->
    <div class="hidden sm:flex flex-wrap justify-center gap-1.5 md:gap-2 mb-4 md:mb-8">
      <button id="filter-all" class="px-3 py-1.5 md:px-4 md:py-2 bg-blue-600 text-white rounded-lg text-xs md:text-sm font-medium shadow-sm hover:bg-blue-700 transition active">Todos</button>
      <button id="filter-unrestricted" class="px-3 py-1.5 md:px-4 md:py-2 bg-white text-gray-700 rounded-lg text-xs md:text-sm font-medium shadow-sm hover:bg-gray-50 transition">Sin restricciones</button>
      <button id="filter-limited" class="px-3 py-1.5 md:px-4 md:py-2 bg-white text-gray-700 rounded-lg text-xs md:text-sm font-medium shadow-sm hover:bg-gray-50 transition">Con restricciones</button>
    </div>

    <!-- Desktop Bank Cards Grid -->
    <div id="bank-grid" class="hidden sm:grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 md:gap-6">
      {sortedBanks.map((bank) => {
        const statusColors = {
          "unrestricted": "border-l-4 border-green-500",
          "moderate": "border-l-4 border-yellow-500",
          "limited": "border-l-4 border-orange-500",
          "very-limited": "border-l-4 border-red-500"
        };
        
        const statusBadges = {
          "unrestricted": "bg-green-100 text-green-800",
          "moderate": "bg-yellow-100 text-yellow-800",
          "limited": "bg-orange-100 text-orange-800",
          "very-limited": "bg-red-100 text-red-800"
        };
        
        const statusText = {
          "unrestricted": "Sin restricciones",
          "moderate": "Restricciones moderadas",
          "limited": "Restricciones significativas",
          "very-limited": "Muy limitado"
        };            return (
          <div class={`bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group ${statusColors[bank.limitStatus as keyof typeof statusColors]}`} data-status={bank.limitStatus}>
            <div class="p-3 md:p-6">
              <div class="flex items-center mb-3 md:mb-4">
                <div class="flex-1">
                  <h3 class="text-sm md:text-lg font-bold text-gray-900 leading-tight">{bank.name}</h3>
                  <div class="flex items-center mt-0.5 md:mt-1">
                    <span class={`text-xs font-medium px-1.5 py-0.5 md:px-2 rounded-full ${statusBadges[bank.limitStatus as keyof typeof statusBadges]}`}>
                      {statusText[bank.limitStatus as keyof typeof statusText]}
                    </span>
                  </div>
                </div>
              </div>
              
              <div class="mb-3 md:mb-4 pb-2 md:pb-4 border-b border-gray-100">
                <div class="flex items-center justify-between">
                  <span class="text-xs md:text-sm text-gray-500">Límite mensual base:</span>
                  <span class="text-xs md:text-sm font-bold text-blue-700">$100</span>
                </div>
              </div>
              
              <div class="mb-3 md:mb-5">
                <h4 class="text-xs md:text-sm font-semibold text-gray-700 mb-1 md:mb-2">Restricciones:</h4>
                <p class="text-xs md:text-sm text-gray-600 min-h-[40px] md:min-h-[60px] leading-tight">{bank.restriction}</p>
              </div>
              
              <a 
                href={bank.tarifarioLink} 
                target="_blank" 
                rel="noopener noreferrer" 
                class="inline-flex items-center text-blue-600 hover:text-blue-800 text-xs md:text-sm font-medium transition-colors group-hover:underline"
              >
                Ver Tarifario
                <svg class="w-3 h-3 md:w-4 md:h-4 ml-1 transition-transform group-hover:translate-x-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                </svg>
              </a>
            </div>
          </div>
        );
      })}
    </div>    <!-- Last Updated -->
    <div class="mt-6 md:mt-12 text-center">
      <div class="inline-flex items-center space-x-1.5 md:space-x-2 text-xs md:text-sm text-gray-500 bg-white px-3 py-1.5 md:px-4 md:py-2 rounded-full shadow-sm">
        <svg class="w-3 h-3 md:w-4 md:h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        <span>Última actualización: <strong>{lastUpdated}</strong></span>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('[id^="filter-"]');
    const bankCards = document.querySelectorAll('#bank-grid > div') as NodeListOf<HTMLElement>;
    
    // Filtrado de bancos
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Actualizar estado activo de los botones
        filterButtons.forEach(btn => btn.classList.remove('active', 'bg-blue-600', 'text-white'));
        filterButtons.forEach(btn => btn.classList.add('bg-white', 'text-gray-700'));
        button.classList.add('active', 'bg-blue-600', 'text-white');
        button.classList.remove('bg-white', 'text-gray-700');
        
        const filter = (button as HTMLElement).id.replace('filter-', '');
        
        // Filtrar tarjetas
        bankCards.forEach(card => {
          if (filter === 'all') {
            card.style.display = 'block';
          } else if (filter === 'unrestricted') {
            card.style.display = card.dataset.status === 'unrestricted' ? 'block' : 'none';
          } else if (filter === 'limited') {
            card.style.display = card.dataset.status !== 'unrestricted' ? 'block' : 'none';
          }
        });
        
        // Animación de entrada
        setTimeout(() => {
          bankCards.forEach(card => {
            if (card.style.display === 'block') {
              card.style.opacity = '1';
              card.style.transform = 'translateY(0)';
            }
          });
        }, 50);
      });
    });
    
    // Animación inicial
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            (entry.target as HTMLElement).style.opacity = '1';
            (entry.target as HTMLElement).style.transform = 'translateY(0)';
          }, index * 100);
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });
    
    bankCards.forEach((card, index) => {
      card.style.opacity = '0';
      card.style.transform = 'translateY(20px)';
      card.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
      observer.observe(card);
    });
  });
</script>

<style>
  /* Estilos adicionales */
  .active {
    position: relative;
  }
  
  .active::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 50%;
    transform: translateX(-50%);
    width: 20px;
    height: 2px;
    background-color: currentColor;
    border-radius: 2px;
  }
</style>
